pipeline {
    agent any

    stages {
        stage('Clone-Repo') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'mvn install -Dmaven.test.skip=true'
            }
        }
		
        stage('Unit Tests') {
            steps {
                sh 'mvn compiler:testCompile'
                sh 'mvn surefire:test'
                junit 'target/**/*.xml'
            }
        }

        stage('Docker Build and Push') {
            steps {
                // Build the Docker image
                sh 'docker build -t gamutkart-img .'
                sh 'docker image list'
                sh 'docker tag gamutkart-img chandureddy008/chandumachine1-img'

                // Login to Docker Hub
                withCredentials([string(credentialsId: 'dockerhubpassword', variable: 'PASSWORD')]) {
                    sh 'docker login -u chandureddy008 -p $PASSWORD'
                }

                // Push the Docker image to Docker Hub
                sh 'docker push chandureddy008/gamutkart-img:1.0'
            }
        }

        stage('Kubernetes Deployment') {
            steps {
                script {
                    def kubectlCmd = "kubectl apply -f kubernetes-deployment.yaml"
                    sh returnStatus: true, script: kubectlCmd
                }
            }
        }
    }
}
