pipeline {
    agent any

    stages {
        stage('Clone-Repo') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'mvn install -Dmaven.test.skip=true'
            }
        }
		
        stage('Unit Tests') {
            steps {
                sh 'mvn compiler:testCompile'
                sh 'mvn surefire:test'
                junit 'target/**/*.xml'
            }
        }

        stage('Docker Build and Push') {
            steps {
                // Build the Docker image
                sh 'docker build -t gamutkart-img .'
                
                // Login to Docker Hub
                withCredentials([usernamePassword(credentialsId: 'your-credentials-id', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "echo \${DOCKER_PASSWORD} | docker login -u \${DOCKER_USERNAME} --password-stdin"
                }
                
                // Push the Docker image to Docker Hub
                sh 'docker push gamutkart-img:latest'
            }
        }

        stage('Kubernetes Deployment') {
            steps {
                script {
                    def kubectlCmd = "kubectl apply -f kubernetes-deployment.yaml"
                    sh returnStatus: true, script: kubectlCmd
                }
            }
        }
    }
}

